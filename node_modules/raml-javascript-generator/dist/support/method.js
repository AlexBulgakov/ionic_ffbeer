"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var camelCase = require("camel-case");
var resource_1 = require("./resource");
function isQueryMethod(method) {
    return method.method === 'get' || method.method === 'head';
}
exports.isQueryMethod = isQueryMethod;
function getRequestSnippet(method, resource) {
    var type = isQueryMethod(method) ? 'query' : 'body';
    if (method.annotations && method.annotations['client.methodName']) {
        var methodName = method.annotations['client.methodName'].structuredValue;
        if (Object.keys(resource.uriParameters).length) {
            return methodName + "([uriParameters, [" + type + ", [options]]])";
        }
        return methodName + "([" + type + ", [options]])";
    }
    var parts = resource.relativeUri.split(/(?=[\/\.])/g);
    return parts.map(function (part) {
        var methodName = resource_1.toMethodName(part);
        var uriParams = Object.keys(resource_1.getUsedUriParameters(part, resource.uriParameters));
        if (uriParams.length) {
            return methodName + "({ " + uriParams.join(', ') + " })";
        }
        return "" + methodName;
    }).join('.') + ("." + camelCase(method.method) + "([" + type + ", [options]])");
}
exports.getRequestSnippet = getRequestSnippet;
function getDisplayName(method, resource) {
    if (method.annotations && method.annotations['client.displayName']) {
        return method.annotations['client.displayName'].structuredValue;
    }
    return "`" + getRequestSnippet(method, resource) + "`";
}
exports.getDisplayName = getDisplayName;
//# sourceMappingURL=method.js.map